name: Test
on:
  push:
  pull_request:
env:
  FORCE_COLOR: 2
jobs:
  full:
    name: Node.js 15 Full
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 15
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies from network
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
      - name: Install dependencies from cache
        if: steps.cache-deps.outputs.cache-hit == 'true'
        run: yarn install --frozen-lockfile --offline
      - name: Run tests
        run: yarn test
  short:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 14
          - 12
    name: Node.js ${{ matrix.node-version }} Quick
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies from network
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
      - name: Install dependencies from cache
        if: steps.cache-deps.outputs.cache-hit == 'true'
        run: yarn install --frozen-lockfile --offline
      - name: Run unit tests
        run: npx jest
